Grammar

    0 $accept: minic $end

    1 minic: extern extern func_def

    2 extern: EXTERN VOID PRINT '(' INT ')' ';'
    3       | EXTERN INT READ '(' ')' ';'

    4 func_def: INT NAME '(' INT NAME ')' block_statement
    5         | INT NAME '(' ')' block_statement

    6 term: NAME
    7     | NUM

    8 block_statement: '{' statements '}'
    9                | '{' var_decs statements '}'

   10 var_decs: var_decs declaration
   11         | declaration

   12 declaration: INT NAME ';'

   13 statements: statements statement
   14           | statement

   15 statement: assign_statement
   16          | if_statement
   17          | while_loop
   18          | block_statement
   19          | call_statement
   20          | return_statement

   21 assign_statement: NAME '=' expression ';'
   22                 | NAME '=' term ';'
   23                 | NAME '=' READ '(' ')' ';'

   24 call_statement: PRINT '(' expression ')' ';'
   25               | PRINT '(' term ')' ';'

   26 return_statement: RETURN term ';'
   27                 | RETURN expression ';'

   28 expression: term '+' term
   29           | term '-' term
   30           | term '/' term
   31           | term '*' term
   32           | '-' term

   33 condition: '(' term LT term ')'
   34          | '(' term GT term ')'
   35          | '(' term LE term ')'
   36          | '(' term GE term ')'
   37          | '(' term EQ term ')'
   38          | '(' term NEQ term ')'

   39 if_statement: IF condition statement
   40             | IF condition statement ELSE statement

   41 while_loop: WHILE condition statement


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 2 3 4 5 23 24 25 33 34 35 36 37 38
    ')' (41) 2 3 4 5 23 24 25 33 34 35 36 37 38
    '*' (42) 31
    '+' (43) 28
    '-' (45) 29 32
    '/' (47) 30
    ';' (59) 2 3 12 21 22 23 24 25 26 27
    '=' (61) 21 22 23
    '{' (123) 8 9
    '}' (125) 8 9
    error (256)
    EXTERN (258) 2 3
    INT (259) 2 3 4 5 12
    VOID (260) 2
    RETURN (261) 26 27
    IF (262) 39 40
    ELSE (263) 40
    WHILE (264) 41
    LT (265) 33
    GT (266) 34
    LE (267) 35
    GE (268) 36
    EQ (269) 37
    NEQ (270) 38
    NUM <ival> (271) 7
    NAME <string> (272) 4 5 6 12 21 22 23
    READ <string> (273) 3 23
    PRINT <string> (274) 2 24 25


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    minic <node> (31)
        on left: 1
        on right: 0
    extern <node> (32)
        on left: 2 3
        on right: 1
    func_def <node> (33)
        on left: 4 5
        on right: 1
    term <node> (34)
        on left: 6 7
        on right: 22 25 26 28 29 30 31 32 33 34 35 36 37 38
    block_statement <node> (35)
        on left: 8 9
        on right: 4 5 18
    var_decs <stmt_vec> (36)
        on left: 10 11
        on right: 9 10
    declaration <node> (37)
        on left: 12
        on right: 10 11
    statements <stmt_vec> (38)
        on left: 13 14
        on right: 8 9 13
    statement <node> (39)
        on left: 15 16 17 18 19 20
        on right: 13 14 39 40 41
    assign_statement <node> (40)
        on left: 21 22 23
        on right: 15
    call_statement <node> (41)
        on left: 24 25
        on right: 19
    return_statement <node> (42)
        on left: 26 27
        on right: 20
    expression <node> (43)
        on left: 28 29 30 31 32
        on right: 21 24 27
    condition <node> (44)
        on left: 33 34 35 36 37 38
        on right: 39 40 41
    if_statement <node> (45)
        on left: 39 40
        on right: 16
    while_loop <node> (46)
        on left: 41
        on right: 17


State 0

    0 $accept: • minic $end

    EXTERN  shift, and go to state 1

    minic   go to state 2
    extern  go to state 3


State 1

    2 extern: EXTERN • VOID PRINT '(' INT ')' ';'
    3       | EXTERN • INT READ '(' ')' ';'

    INT   shift, and go to state 4
    VOID  shift, and go to state 5


State 2

    0 $accept: minic • $end

    $end  shift, and go to state 6


State 3

    1 minic: extern • extern func_def

    EXTERN  shift, and go to state 1

    extern  go to state 7


State 4

    3 extern: EXTERN INT • READ '(' ')' ';'

    READ  shift, and go to state 8


State 5

    2 extern: EXTERN VOID • PRINT '(' INT ')' ';'

    PRINT  shift, and go to state 9


State 6

    0 $accept: minic $end •

    $default  accept


State 7

    1 minic: extern extern • func_def

    INT  shift, and go to state 10

    func_def  go to state 11


State 8

    3 extern: EXTERN INT READ • '(' ')' ';'

    '('  shift, and go to state 12


State 9

    2 extern: EXTERN VOID PRINT • '(' INT ')' ';'

    '('  shift, and go to state 13


State 10

    4 func_def: INT • NAME '(' INT NAME ')' block_statement
    5         | INT • NAME '(' ')' block_statement

    NAME  shift, and go to state 14


State 11

    1 minic: extern extern func_def •

    $default  reduce using rule 1 (minic)


State 12

    3 extern: EXTERN INT READ '(' • ')' ';'

    ')'  shift, and go to state 15


State 13

    2 extern: EXTERN VOID PRINT '(' • INT ')' ';'

    INT  shift, and go to state 16


State 14

    4 func_def: INT NAME • '(' INT NAME ')' block_statement
    5         | INT NAME • '(' ')' block_statement

    '('  shift, and go to state 17


State 15

    3 extern: EXTERN INT READ '(' ')' • ';'

    ';'  shift, and go to state 18


State 16

    2 extern: EXTERN VOID PRINT '(' INT • ')' ';'

    ')'  shift, and go to state 19


State 17

    4 func_def: INT NAME '(' • INT NAME ')' block_statement
    5         | INT NAME '(' • ')' block_statement

    INT  shift, and go to state 20
    ')'  shift, and go to state 21


State 18

    3 extern: EXTERN INT READ '(' ')' ';' •

    $default  reduce using rule 3 (extern)


State 19

    2 extern: EXTERN VOID PRINT '(' INT ')' • ';'

    ';'  shift, and go to state 22


State 20

    4 func_def: INT NAME '(' INT • NAME ')' block_statement

    NAME  shift, and go to state 23


State 21

    5 func_def: INT NAME '(' ')' • block_statement

    '{'  shift, and go to state 24

    block_statement  go to state 25


State 22

    2 extern: EXTERN VOID PRINT '(' INT ')' ';' •

    $default  reduce using rule 2 (extern)


State 23

    4 func_def: INT NAME '(' INT NAME • ')' block_statement

    ')'  shift, and go to state 26


State 24

    8 block_statement: '{' • statements '}'
    9                | '{' • var_decs statements '}'

    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    IF      shift, and go to state 29
    WHILE   shift, and go to state 30
    NAME    shift, and go to state 31
    PRINT   shift, and go to state 32
    '{'     shift, and go to state 24

    block_statement   go to state 33
    var_decs          go to state 34
    declaration       go to state 35
    statements        go to state 36
    statement         go to state 37
    assign_statement  go to state 38
    call_statement    go to state 39
    return_statement  go to state 40
    if_statement      go to state 41
    while_loop        go to state 42


State 25

    5 func_def: INT NAME '(' ')' block_statement •

    $default  reduce using rule 5 (func_def)


State 26

    4 func_def: INT NAME '(' INT NAME ')' • block_statement

    '{'  shift, and go to state 24

    block_statement  go to state 43


State 27

   12 declaration: INT • NAME ';'

    NAME  shift, and go to state 44


State 28

   26 return_statement: RETURN • term ';'
   27                 | RETURN • expression ';'

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46
    '-'   shift, and go to state 47

    term        go to state 48
    expression  go to state 49


State 29

   39 if_statement: IF • condition statement
   40             | IF • condition statement ELSE statement

    '('  shift, and go to state 50

    condition  go to state 51


State 30

   41 while_loop: WHILE • condition statement

    '('  shift, and go to state 50

    condition  go to state 52


State 31

   21 assign_statement: NAME • '=' expression ';'
   22                 | NAME • '=' term ';'
   23                 | NAME • '=' READ '(' ')' ';'

    '='  shift, and go to state 53


State 32

   24 call_statement: PRINT • '(' expression ')' ';'
   25               | PRINT • '(' term ')' ';'

    '('  shift, and go to state 54


State 33

   18 statement: block_statement •

    $default  reduce using rule 18 (statement)


State 34

    9 block_statement: '{' var_decs • statements '}'
   10 var_decs: var_decs • declaration

    INT     shift, and go to state 27
    RETURN  shift, and go to state 28
    IF      shift, and go to state 29
    WHILE   shift, and go to state 30
    NAME    shift, and go to state 31
    PRINT   shift, and go to state 32
    '{'     shift, and go to state 24

    block_statement   go to state 33
    declaration       go to state 55
    statements        go to state 56
    statement         go to state 37
    assign_statement  go to state 38
    call_statement    go to state 39
    return_statement  go to state 40
    if_statement      go to state 41
    while_loop        go to state 42


State 35

   11 var_decs: declaration •

    $default  reduce using rule 11 (var_decs)


State 36

    8 block_statement: '{' statements • '}'
   13 statements: statements • statement

    RETURN  shift, and go to state 28
    IF      shift, and go to state 29
    WHILE   shift, and go to state 30
    NAME    shift, and go to state 31
    PRINT   shift, and go to state 32
    '{'     shift, and go to state 24
    '}'     shift, and go to state 57

    block_statement   go to state 33
    statement         go to state 58
    assign_statement  go to state 38
    call_statement    go to state 39
    return_statement  go to state 40
    if_statement      go to state 41
    while_loop        go to state 42


State 37

   14 statements: statement •

    $default  reduce using rule 14 (statements)


State 38

   15 statement: assign_statement •

    $default  reduce using rule 15 (statement)


State 39

   19 statement: call_statement •

    $default  reduce using rule 19 (statement)


State 40

   20 statement: return_statement •

    $default  reduce using rule 20 (statement)


State 41

   16 statement: if_statement •

    $default  reduce using rule 16 (statement)


State 42

   17 statement: while_loop •

    $default  reduce using rule 17 (statement)


State 43

    4 func_def: INT NAME '(' INT NAME ')' block_statement •

    $default  reduce using rule 4 (func_def)


State 44

   12 declaration: INT NAME • ';'

    ';'  shift, and go to state 59


State 45

    7 term: NUM •

    $default  reduce using rule 7 (term)


State 46

    6 term: NAME •

    $default  reduce using rule 6 (term)


State 47

   32 expression: '-' • term

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46

    term  go to state 60


State 48

   26 return_statement: RETURN term • ';'
   28 expression: term • '+' term
   29           | term • '-' term
   30           | term • '/' term
   31           | term • '*' term

    ';'  shift, and go to state 61
    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '/'  shift, and go to state 64
    '*'  shift, and go to state 65


State 49

   27 return_statement: RETURN expression • ';'

    ';'  shift, and go to state 66


State 50

   33 condition: '(' • term LT term ')'
   34          | '(' • term GT term ')'
   35          | '(' • term LE term ')'
   36          | '(' • term GE term ')'
   37          | '(' • term EQ term ')'
   38          | '(' • term NEQ term ')'

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46

    term  go to state 67


State 51

   39 if_statement: IF condition • statement
   40             | IF condition • statement ELSE statement

    RETURN  shift, and go to state 28
    IF      shift, and go to state 29
    WHILE   shift, and go to state 30
    NAME    shift, and go to state 31
    PRINT   shift, and go to state 32
    '{'     shift, and go to state 24

    block_statement   go to state 33
    statement         go to state 68
    assign_statement  go to state 38
    call_statement    go to state 39
    return_statement  go to state 40
    if_statement      go to state 41
    while_loop        go to state 42


State 52

   41 while_loop: WHILE condition • statement

    RETURN  shift, and go to state 28
    IF      shift, and go to state 29
    WHILE   shift, and go to state 30
    NAME    shift, and go to state 31
    PRINT   shift, and go to state 32
    '{'     shift, and go to state 24

    block_statement   go to state 33
    statement         go to state 69
    assign_statement  go to state 38
    call_statement    go to state 39
    return_statement  go to state 40
    if_statement      go to state 41
    while_loop        go to state 42


State 53

   21 assign_statement: NAME '=' • expression ';'
   22                 | NAME '=' • term ';'
   23                 | NAME '=' • READ '(' ')' ';'

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46
    READ  shift, and go to state 70
    '-'   shift, and go to state 47

    term        go to state 71
    expression  go to state 72


State 54

   24 call_statement: PRINT '(' • expression ')' ';'
   25               | PRINT '(' • term ')' ';'

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46
    '-'   shift, and go to state 47

    term        go to state 73
    expression  go to state 74


State 55

   10 var_decs: var_decs declaration •

    $default  reduce using rule 10 (var_decs)


State 56

    9 block_statement: '{' var_decs statements • '}'
   13 statements: statements • statement

    RETURN  shift, and go to state 28
    IF      shift, and go to state 29
    WHILE   shift, and go to state 30
    NAME    shift, and go to state 31
    PRINT   shift, and go to state 32
    '{'     shift, and go to state 24
    '}'     shift, and go to state 75

    block_statement   go to state 33
    statement         go to state 58
    assign_statement  go to state 38
    call_statement    go to state 39
    return_statement  go to state 40
    if_statement      go to state 41
    while_loop        go to state 42


State 57

    8 block_statement: '{' statements '}' •

    $default  reduce using rule 8 (block_statement)


State 58

   13 statements: statements statement •

    $default  reduce using rule 13 (statements)


State 59

   12 declaration: INT NAME ';' •

    $default  reduce using rule 12 (declaration)


State 60

   32 expression: '-' term •

    $default  reduce using rule 32 (expression)


State 61

   26 return_statement: RETURN term ';' •

    $default  reduce using rule 26 (return_statement)


State 62

   28 expression: term '+' • term

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46

    term  go to state 76


State 63

   29 expression: term '-' • term

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46

    term  go to state 77


State 64

   30 expression: term '/' • term

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46

    term  go to state 78


State 65

   31 expression: term '*' • term

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46

    term  go to state 79


State 66

   27 return_statement: RETURN expression ';' •

    $default  reduce using rule 27 (return_statement)


State 67

   33 condition: '(' term • LT term ')'
   34          | '(' term • GT term ')'
   35          | '(' term • LE term ')'
   36          | '(' term • GE term ')'
   37          | '(' term • EQ term ')'
   38          | '(' term • NEQ term ')'

    LT   shift, and go to state 80
    GT   shift, and go to state 81
    LE   shift, and go to state 82
    GE   shift, and go to state 83
    EQ   shift, and go to state 84
    NEQ  shift, and go to state 85


State 68

   39 if_statement: IF condition statement •
   40             | IF condition statement • ELSE statement

    ELSE  shift, and go to state 86

    $default  reduce using rule 39 (if_statement)


State 69

   41 while_loop: WHILE condition statement •

    $default  reduce using rule 41 (while_loop)


State 70

   23 assign_statement: NAME '=' READ • '(' ')' ';'

    '('  shift, and go to state 87


State 71

   22 assign_statement: NAME '=' term • ';'
   28 expression: term • '+' term
   29           | term • '-' term
   30           | term • '/' term
   31           | term • '*' term

    ';'  shift, and go to state 88
    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '/'  shift, and go to state 64
    '*'  shift, and go to state 65


State 72

   21 assign_statement: NAME '=' expression • ';'

    ';'  shift, and go to state 89


State 73

   25 call_statement: PRINT '(' term • ')' ';'
   28 expression: term • '+' term
   29           | term • '-' term
   30           | term • '/' term
   31           | term • '*' term

    ')'  shift, and go to state 90
    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '/'  shift, and go to state 64
    '*'  shift, and go to state 65


State 74

   24 call_statement: PRINT '(' expression • ')' ';'

    ')'  shift, and go to state 91


State 75

    9 block_statement: '{' var_decs statements '}' •

    $default  reduce using rule 9 (block_statement)


State 76

   28 expression: term '+' term •

    $default  reduce using rule 28 (expression)


State 77

   29 expression: term '-' term •

    $default  reduce using rule 29 (expression)


State 78

   30 expression: term '/' term •

    $default  reduce using rule 30 (expression)


State 79

   31 expression: term '*' term •

    $default  reduce using rule 31 (expression)


State 80

   33 condition: '(' term LT • term ')'

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46

    term  go to state 92


State 81

   34 condition: '(' term GT • term ')'

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46

    term  go to state 93


State 82

   35 condition: '(' term LE • term ')'

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46

    term  go to state 94


State 83

   36 condition: '(' term GE • term ')'

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46

    term  go to state 95


State 84

   37 condition: '(' term EQ • term ')'

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46

    term  go to state 96


State 85

   38 condition: '(' term NEQ • term ')'

    NUM   shift, and go to state 45
    NAME  shift, and go to state 46

    term  go to state 97


State 86

   40 if_statement: IF condition statement ELSE • statement

    RETURN  shift, and go to state 28
    IF      shift, and go to state 29
    WHILE   shift, and go to state 30
    NAME    shift, and go to state 31
    PRINT   shift, and go to state 32
    '{'     shift, and go to state 24

    block_statement   go to state 33
    statement         go to state 98
    assign_statement  go to state 38
    call_statement    go to state 39
    return_statement  go to state 40
    if_statement      go to state 41
    while_loop        go to state 42


State 87

   23 assign_statement: NAME '=' READ '(' • ')' ';'

    ')'  shift, and go to state 99


State 88

   22 assign_statement: NAME '=' term ';' •

    $default  reduce using rule 22 (assign_statement)


State 89

   21 assign_statement: NAME '=' expression ';' •

    $default  reduce using rule 21 (assign_statement)


State 90

   25 call_statement: PRINT '(' term ')' • ';'

    ';'  shift, and go to state 100


State 91

   24 call_statement: PRINT '(' expression ')' • ';'

    ';'  shift, and go to state 101


State 92

   33 condition: '(' term LT term • ')'

    ')'  shift, and go to state 102


State 93

   34 condition: '(' term GT term • ')'

    ')'  shift, and go to state 103


State 94

   35 condition: '(' term LE term • ')'

    ')'  shift, and go to state 104


State 95

   36 condition: '(' term GE term • ')'

    ')'  shift, and go to state 105


State 96

   37 condition: '(' term EQ term • ')'

    ')'  shift, and go to state 106


State 97

   38 condition: '(' term NEQ term • ')'

    ')'  shift, and go to state 107


State 98

   40 if_statement: IF condition statement ELSE statement •

    $default  reduce using rule 40 (if_statement)


State 99

   23 assign_statement: NAME '=' READ '(' ')' • ';'

    ';'  shift, and go to state 108


State 100

   25 call_statement: PRINT '(' term ')' ';' •

    $default  reduce using rule 25 (call_statement)


State 101

   24 call_statement: PRINT '(' expression ')' ';' •

    $default  reduce using rule 24 (call_statement)


State 102

   33 condition: '(' term LT term ')' •

    $default  reduce using rule 33 (condition)


State 103

   34 condition: '(' term GT term ')' •

    $default  reduce using rule 34 (condition)


State 104

   35 condition: '(' term LE term ')' •

    $default  reduce using rule 35 (condition)


State 105

   36 condition: '(' term GE term ')' •

    $default  reduce using rule 36 (condition)


State 106

   37 condition: '(' term EQ term ')' •

    $default  reduce using rule 37 (condition)


State 107

   38 condition: '(' term NEQ term ')' •

    $default  reduce using rule 38 (condition)


State 108

   23 assign_statement: NAME '=' READ '(' ')' ';' •

    $default  reduce using rule 23 (assign_statement)
